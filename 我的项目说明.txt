首先，我先对GitHub做一个简单的介绍，GitHub有一个很强大的功能就是，你可以在服务器端创建一个库，上面的代码可以同步到本地；或者将本地的代码通过git bash命令同步到服务器端。写代码是一件很重的任务，尤其是很多人完成一个很大的项目的时候，就十分的复杂，一群人一起来写某个项目，大家完成的时间，完成的进度都是不相同的，最后怎么才能将大家的代码轻松的汇总起来呢？这样我们就用到了GitHub这个平台。
我们在GitHub服务器上有一个主仓库，这里用来储存你的所有代码，如果不付费的话是所有人都可以看的，如果你不想让别人看到你的代码，可以选择付费仓库。我们创建了主仓库之后，就可以在电脑上创建分支，之后你就可以在电脑上完成自己的代码，写完之后直接同步在电脑的分支，当你认为可以上传的自己的主仓库时，就可以申请更新，当通过审核的时候，你代码就出现在了自己的主仓库中，这样全世界的程序员都可以查看你的代码。
全世界现在已经有300万的注册用户，甚至还有一些相当知名的开源项目也在其中公布代码。在GitHub上你可以看到很多计算机领域的精英所分享的自己的代码。这是GitHub的两个主要优点，适合团队协作，以及下载其他优秀者的代码。
这次通过学习git让我学到了很多，了解到了很多自己不知道的知识。Git 是一个分布式管理工具，通过指纹字符串来时刻保持数据的完整性，关心的是文件数据整体的变化，并不保存变化前后的差异数据；Git 在本地磁盘保存有关项目的历史更新，所有绝大多数操作只需要访问本地文件资源，并不需要Internet。当然可以使用GitHbub将代码托管，进行远程开发，方便团队比较分散的情况（这正体现Git分布式的优势）；开发人员只需将项目clone到本地，进行相应的开发然后push上传到 GitHub即可。
全世界现在已经有300万的注册用户，甚至还有一些相当知名的开源项目也在其中公布代码。在GitHub上你可以看到很多计算机领域的精英所分享的自己的代码。这是GitHub的两个主要优点，适合团队协作，以及下载其他优秀者的代码。
这次通过学习git让我学到了很多，了解到了很多自己不知道的知识。
  在我完成了基本的作业后，我还看了一些关于git本地仓库的基本用法，如下
Git本地仓库的基本用法：
① git init ：初试化当前目录为一个Git本地仓库。
② git add : 如果一个文件是未被跟踪的，将 一个文件加入到Git版本控制当中，让Git对其进行跟踪；如果一个文件是已修改状态，则将一个文件放到暂存区中。
git add . : "."点表示当前目录下的所有内容